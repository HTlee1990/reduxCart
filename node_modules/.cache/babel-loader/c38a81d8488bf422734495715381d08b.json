{"ast":null,"code":"var _jsxFileName = \"/Users/ihyeongtae/project/redux/02/src/components/Shop/ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { cartActions } from \"../../store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const {\n    title,\n    price,\n    description\n  } = props;\n\n  const addHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice(); //create and copy via slice to avoid mutation\n\n    const existingItem = updatedItems.find(item => item.title === title);\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem\n      }; // new object + copy existing properties\n\n      updatedItem.quantity++;\n      updatedItem.total += price;\n      const existingItemIndex = updatedItems.findIndex(item => item.title === title);\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        title,\n        price,\n        quantity: 1,\n        total: price\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems\n    };\n    dispatch(cartActions.add({\n      title,\n      price\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/Users/ihyeongtae/project/redux/02/src/components/Shop/ProductItem.js"],"names":["useDispatch","useSelector","Card","classes","cartActions","ProductItem","props","cart","state","dispatch","title","price","description","addHandler","newTotalQuantity","totalQuantity","updatedItems","items","slice","existingItem","find","item","updatedItem","quantity","total","existingItemIndex","findIndex","push","newCart","add","toFixed","actions"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,QAA4B,mBAA5B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAgCN,KAAtC;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvB,UAAMC,gBAAgB,GAAGP,IAAI,CAACQ,aAAL,GAAqB,CAA9C;AACA,UAAMC,YAAY,GAAGT,IAAI,CAACU,KAAL,CAAWC,KAAX,EAArB,CAFuB,CAEkB;;AACzC,UAAMC,YAAY,GAAGH,YAAY,CAACI,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACX,KAAL,KAAeA,KAA3C,CAArB;;AACA,QAAIS,YAAJ,EAAkB;AAChB,YAAMG,WAAW,GAAG,EAAE,GAAGH;AAAL,OAApB,CADgB,CACyB;;AACzCG,MAAAA,WAAW,CAACC,QAAZ;AACAD,MAAAA,WAAW,CAACE,KAAZ,IAAqBb,KAArB;AACA,YAAMc,iBAAiB,GAAGT,YAAY,CAACU,SAAb,CACvBL,IAAD,IAAUA,IAAI,CAACX,KAAL,KAAeA,KADD,CAA1B;AAGAM,MAAAA,YAAY,CAACS,iBAAD,CAAZ,GAAkCH,WAAlC;AACD,KARD,MAQO;AACLN,MAAAA,YAAY,CAACW,IAAb,CAAkB;AAAEjB,QAAAA,KAAF;AAASC,QAAAA,KAAT;AAAgBY,QAAAA,QAAQ,EAAE,CAA1B;AAA6BC,QAAAA,KAAK,EAAEb;AAApC,OAAlB;AACD;;AACD,UAAMiB,OAAO,GAAG;AAAEb,MAAAA,aAAa,EAAED,gBAAjB;AAAmCG,MAAAA,KAAK,EAAED;AAA1C,KAAhB;AACAP,IAAAA,QAAQ,CAACL,WAAW,CAACyB,GAAZ,CAAgB;AAAEnB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhB,CAAD,CAAR;AACD,GAjBD;;AAkBA,sBACE;AAAI,IAAA,SAAS,EAAER,OAAO,CAACkB,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAKX;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACQ,KAAxB;AAAA,0BAAiCA,KAAK,CAACmB,OAAN,CAAc,CAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIlB;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAET,OAAO,CAAC4B,OAAxB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAElB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMR,W;UACSJ,W,EACID,W;;;KAFbK,W;AAuCN,eAAeA,WAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { cartActions } from \"../../store/index\";\n\nconst ProductItem = (props) => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  const { title, price, description } = props;\n\n  const addHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice(); //create and copy via slice to avoid mutation\n    const existingItem = updatedItems.find((item) => item.title === title);\n    if (existingItem) {\n      const updatedItem = { ...existingItem }; // new object + copy existing properties\n      updatedItem.quantity++;\n      updatedItem.total += price;\n      const existingItemIndex = updatedItems.findIndex(\n        (item) => item.title === title\n      );\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({ title, price, quantity: 1, total: price });\n    }\n    const newCart = { totalQuantity: newTotalQuantity, items: updatedItems };\n    dispatch(cartActions.add({ title, price }));\n  };\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}