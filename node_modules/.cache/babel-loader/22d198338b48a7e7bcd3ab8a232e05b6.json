{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport toggleSlice from \"./ui-slice\";\nconst initialCartState = [{\n  title: \"Test\",\n  price: 6,\n  quantity: 0,\n  total: 0\n}];\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    add(state, action) {\n      const {\n        price,\n        title\n      } = action.payload;\n\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          state[i].quantity += 1;\n          state[i].total += price;\n          return;\n        }\n      }\n\n      state.push({\n        title,\n        price,\n        quantity: 1,\n        total: price\n      });\n    },\n\n    decrease(state, action) {\n      const title = action.payload;\n\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          if (state[i].quantity === 1) {\n            state.splice(i, 1);\n          } else {\n            state[i].quantity--;\n            state[i].total -= state[i].price;\n          }\n        }\n      }\n    },\n\n    increase(state, action) {\n      const title = action.payload; // console.log(title);\n\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          state[i].quantity++;\n          state[i].total += state[i].price;\n        }\n      }\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    toggle: toggleSlice.reducer,\n    cart: cartSlice.reducer\n  }\n});\nconst toggleActions = toggleSlice.actions;\nconst cartActions = cartSlice.actions;\nexport { store, toggleActions, cartActions };","map":{"version":3,"sources":["/Users/ihyeongtae/project/redux/02/src/store/index.js"],"names":["configureStore","createSlice","toggleSlice","initialCartState","title","price","quantity","total","cartSlice","name","initialState","reducers","add","state","action","payload","i","length","push","decrease","splice","increase","store","reducer","toggle","cart","toggleActions","actions","cartActions"],"mappings":"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","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport toggleSlice from \"./ui-slice\";\n\nconst initialCartState = [{ title: \"Test\", price: 6, quantity: 0, total: 0 }];\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    add(state, action) {\n      const { price, title } = action.payload;\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          state[i].quantity += 1;\n          state[i].total += price;\n          return;\n        }\n      }\n      state.push({ title, price, quantity: 1, total: price });\n    },\n\n    decrease(state, action) {\n      const title = action.payload;\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          if (state[i].quantity === 1) {\n            state.splice(i, 1);\n          } else {\n            state[i].quantity--;\n            state[i].total -= state[i].price;\n          }\n        }\n      }\n    },\n    increase(state, action) {\n      const title = action.payload;\n      // console.log(title);\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          state[i].quantity++;\n          state[i].total += state[i].price;\n        }\n      }\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: { toggle: toggleSlice.reducer, cart: cartSlice.reducer },\n});\n\nconst toggleActions = toggleSlice.actions;\nconst cartActions = cartSlice.actions;\n\nexport { store, toggleActions, cartActions };\n"]},"metadata":{},"sourceType":"module"}