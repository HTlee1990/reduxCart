{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialToggleState = {\n  toggleShow: false\n};\nconst toggleSlice = createSlice({\n  name: \"toggle\",\n  initialState: initialToggleState,\n  reducers: {\n    toggle(state) {\n      state.toggleShow = !state.toggleShow;\n    }\n\n  }\n});\nconst initialCartState = [{\n  title: \"Test\",\n  price: 6,\n  quantity: 0,\n  total: 0\n}];\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    add(state, action) {\n      const {\n        price,\n        title\n      } = action.payload;\n\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          state[i].quantity += 1;\n          state[i].total += price;\n          return;\n        }\n      }\n\n      state.push({\n        title,\n        price,\n        quantity: 1,\n        total: price\n      });\n    },\n\n    decrease(state) {}\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    toggle: toggleSlice.reducer,\n    cart: cartSlice.reducer\n  }\n});\nconst toggleActions = toggleSlice.actions;\nconst cartActions = cartSlice.actions;\nexport { store, toggleActions, cartActions };","map":{"version":3,"sources":["/Users/ihyeongtae/project/redux/02/src/store/index.js"],"names":["configureStore","createSlice","initialToggleState","toggleShow","toggleSlice","name","initialState","reducers","toggle","state","initialCartState","title","price","quantity","total","cartSlice","add","action","payload","i","length","push","decrease","store","reducer","cart","toggleActions","actions","cartActions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,kBAAkB,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAA3B;AACA,MAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEJ,kBAFgB;AAG9BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,UAAN,GAAmB,CAACM,KAAK,CAACN,UAA1B;AACD;;AAHO;AAHoB,CAAD,CAA/B;AAUA,MAAMO,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE,CAAxB;AAA2BC,EAAAA,QAAQ,EAAE,CAArC;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAAD,CAAzB;AAEA,MAAMC,SAAS,GAAGd,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAEI,gBAFc;AAG5BH,EAAAA,QAAQ,EAAE;AACRS,IAAAA,GAAG,CAACP,KAAD,EAAQQ,MAAR,EAAgB;AACjB,YAAM;AAAEL,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAmBM,MAAM,CAACC,OAAhC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIV,KAAK,CAACU,CAAD,CAAL,CAASR,KAAT,KAAmBA,KAAvB,EAA8B;AAC5BF,UAAAA,KAAK,CAACU,CAAD,CAAL,CAASN,QAAT,IAAqB,CAArB;AACAJ,UAAAA,KAAK,CAACU,CAAD,CAAL,CAASL,KAAT,IAAkBF,KAAlB;AACA;AACD;AACF;;AACDH,MAAAA,KAAK,CAACY,IAAN,CAAW;AAAEV,QAAAA,KAAF;AAASC,QAAAA,KAAT;AAAgBC,QAAAA,QAAQ,EAAE,CAA1B;AAA6BC,QAAAA,KAAK,EAAEF;AAApC,OAAX;AACD,KAXO;;AAaRU,IAAAA,QAAQ,CAACb,KAAD,EAAQ,CAAE;;AAbV;AAHkB,CAAD,CAA7B;AAoBA,MAAMc,KAAK,GAAGvB,cAAc,CAAC;AAC3BwB,EAAAA,OAAO,EAAE;AAAEhB,IAAAA,MAAM,EAAEJ,WAAW,CAACoB,OAAtB;AAA+BC,IAAAA,IAAI,EAAEV,SAAS,CAACS;AAA/C;AADkB,CAAD,CAA5B;AAIA,MAAME,aAAa,GAAGtB,WAAW,CAACuB,OAAlC;AACA,MAAMC,WAAW,GAAGb,SAAS,CAACY,OAA9B;AAEA,SAASJ,KAAT,EAAgBG,aAAhB,EAA+BE,WAA/B","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialToggleState = { toggleShow: false };\nconst toggleSlice = createSlice({\n  name: \"toggle\",\n  initialState: initialToggleState,\n  reducers: {\n    toggle(state) {\n      state.toggleShow = !state.toggleShow;\n    },\n  },\n});\n\nconst initialCartState = [{ title: \"Test\", price: 6, quantity: 0, total: 0 }];\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    add(state, action) {\n      const { price, title } = action.payload;\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].title === title) {\n          state[i].quantity += 1;\n          state[i].total += price;\n          return;\n        }\n      }\n      state.push({ title, price, quantity: 1, total: price });\n    },\n\n    decrease(state) {},\n  },\n});\n\nconst store = configureStore({\n  reducer: { toggle: toggleSlice.reducer, cart: cartSlice.reducer },\n});\n\nconst toggleActions = toggleSlice.actions;\nconst cartActions = cartSlice.actions;\n\nexport { store, toggleActions, cartActions };\n"]},"metadata":{},"sourceType":"module"}